{"version":3,"sources":["skeletons/Shimmer.js","skeletons/SkeletonElement.js","skeletons/SkeletonsArticle.js","components/Articels.js","skeletons/SkeletonProfile.js","components/User.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["Shimmer","className","SkeletonElement","type","classes","SkeletonArticle","themeClass","theme","Articles","useState","articles","setArticles","useEffect","setTimeout","a","fetch","res","json","data","map","article","Card","Header","date","Body","Text","slug","Button","variant","n","SkeletonProfile","User","profile","setProfile","username","email","href","website","App","Navbar","bg","Brand","src","width","height","alt","Nav","Link","Form","inline","FormControl","placeholder","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.6bf7194d.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst Shimmer =() => {\r\n    return (\r\n        <div className=\"shimmer-wrapper\">\r\n            <div className=\"shimmer\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Shimmer;","import React from 'react';\r\nimport './Skeleton.css'\r\n\r\nconst SkeletonElement = ({ type }) => {\r\n    const classes = `skeleton ${type}`;\r\n\r\n    return(\r\n        <div className={classes}></div>\r\n\r\n    )\r\n}\r\n\r\nexport default SkeletonElement;","import React from 'react';\r\nimport Shimmer from './Shimmer';\r\nimport SkeletonElement from './SkeletonElement';\r\n\r\nconst SkeletonArticle = ({theme}) => {\r\n    const themeClass = theme || 'light';\r\n\r\n    return(\r\n        <div className = {`skeleton-wrapper ${themeClass}`}>\r\n            <div className=\"skeleton-article\">\r\n                <SkeletonElement type =\"title\"/>\r\n                <SkeletonElement type =\"text\"/>\r\n                <SkeletonElement type =\"text\"/>\r\n                <SkeletonElement type =\"text\"/>\r\n            </div>\r\n            <Shimmer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SkeletonArticle;","import React, { useEffect, useState } from \"react\";\r\nimport SkeletonArticle from \"../skeletons/SkeletonsArticle\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\n\r\nconst Articles = () => {\r\n  const [articles, setArticles] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setTimeout(async () => {\r\n      const res = await fetch(\"http://unhas.ac.id/v2/wp-json/wp/v2/posts?per_page=9&page=2\");\r\n      const data = await res.json();\r\n      setArticles(data);\r\n    }, 3000);\r\n  });\r\n\r\n  return (\r\n    <div className=\"articles\">\r\n      <h2>Articles</h2>\r\n\r\n      {articles &&\r\n        articles.map((article) => (\r\n          <div className=\"article\" key={article}>\r\n            <Card>\r\n              <Card.Header>{article.date}</Card.Header>\r\n              <Card.Body>\r\n                <Card.Text>{article.slug}</Card.Text>\r\n                <Button variant=\"primary\">Link Artikel</Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        ))}\r\n\r\n      {!articles && [1, 2, 3, 4, 5].map((n) => <SkeletonArticle key={n} theme=\"dark\" />)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Articles;\r\n","import React from 'react';\r\nimport SkeletonElement from './SkeletonElement';\r\nimport Shimmer from './Shimmer'\r\n\r\nconst SkeletonProfile = ({ theme}) => {\r\n    const themeClass = theme || 'light';\r\n\r\n    return (\r\n        <div className = {`skeleton-wrapper ${themeClass}`}>\r\n            <div className =\"skeleton-profile\">\r\n                <div>\r\n                    <SkeletonElement type=\"avatar\"/>\r\n                </div>\r\n                <div>\r\n                    <SkeletonElement type=\"title\"/>\r\n                    <SkeletonElement type=\"text\"/>\r\n                    <SkeletonElement type=\"text\"/>\r\n                    \r\n                </div>\r\n                <Shimmer/>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SkeletonProfile;","import React, { useEffect, useState } from \"react\";\r\nimport SkeletonProfile from \"../skeletons/SkeletonProfile\";\r\n\r\nconst User = () => {\r\n  const [profile, setProfile] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setTimeout(async () => {\r\n      const res = await fetch(\"https://jsonplaceholder.typicode.com/users/1\");\r\n      const data = await res.json();\r\n      setProfile(data);\r\n    }, 3000);\r\n  });\r\n\r\n  return (\r\n    <div className=\"user\">\r\n      <h2>User Details</h2>\r\n\r\n      {profile && (\r\n        <div className=\"profile\">\r\n          <h3>{profile.username} </h3>\r\n          <p>{profile.email}</p>\r\n          <a href={profile.website}> {profile.website}</a>\r\n        </div>\r\n      )}\r\n\r\n      {!profile && <SkeletonProfile theme=\"dark\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from \"react\";\nimport Articles from \"./components/Articels\";\nimport User from \"./components/User\";\nimport { Nav, Navbar, Button, Form, FormControl } from \"react-bootstrap\";\nimport {} from \"@material-ui/core\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <>\n          <Navbar bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"#home\">\n              <img src=\"https://raw.githubusercontent.com/AdyAhmadi24/Pictures/main/Penguin.png\" width=\"80\" height=\"65\" className=\"d-inline-block align-top\" alt=\"Rekayasa Web\" />\n            </Navbar.Brand>\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"#home\">Home</Nav.Link>\n              <Nav.Link href=\"#features\">Blog</Nav.Link>\n              <Nav.Link href=\"https://adyahmadi24.github.io/#\">Kontak</Nav.Link>\n            </Nav>\n            <Form inline>\n              <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n              <Button variant=\"outline-info\">Search</Button>\n            </Form>\n          </Navbar>\n        </>\n      </header>\n      <div className=\"content\">\n        <Articles />\n        <User />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\"This web app is being served cache-first by a service \" + \"worker. To learn more, visit https://cra.link/PWA\");\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\"New content is available and will be used when all \" + \"tabs for this page are closed. See https://cra.link/PWA.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\"No internet connection found. App is running in offline mode.\");\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}